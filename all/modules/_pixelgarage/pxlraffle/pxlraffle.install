<?php
/**
 * Created by PhpStorm.
 * User: ralph
 * Date: 28.03.16
 * Time: 14:43
 */

/**
 * Implements hook_schema().
 */
function pxlraffle_schema() {
  $schema['pxl_donations'] = array(
    'description' => 'Table that contains all stripe donations with the corresponding fees.',
    'fields' => array(
      'did' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique donation event ID.',
      ),
      'booked' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Indicates, if donations has been completely booked in bank account',
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => 'one-time',
        'description' => 'Type of donation event, for example "one-time" or "recurring"',
      ),
      'amount' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2
      ),
      'stripe_fee' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'description' => 'Stripe transaction fee',
      ),
      'app_fee' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'description' => 'Voluntary application fee for administration',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Unix timestamp of when event occurred.',
      ),
    ),
    'primary key' => array('did'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function pxlraffle_install () {
  //
  // initializes all needed node types of module
  $bundles = pxlraffle_nodes_default();

  foreach ($bundles as $bundle_data) {
    // import bundle data
    bundle_copy_import_submit(array(), $bundle_data);
  }

}

/**
 * Implements hook_uninstall().
 */
function pxlraffle_uninstall() {
  $delta = 'pxlraffle_current_info';
  variable_del($delta . '_odometer_label');
  variable_del($delta . '_odometer_label_position');
  variable_del($delta . '_odometer_anim_number_range');
  variable_del($delta . '_odometer_format');
  variable_del($delta . '_odometer_theme');

  $delta = 'pxlraffle_subscriptions';
  variable_del($delta . '_odometer_label');
  variable_del($delta . '_odometer_label_position');
  variable_del($delta . '_odometer_anim_number_range');
  variable_del($delta . '_odometer_format');
  variable_del($delta . '_odometer_theme');
}

/**
 * Insert the {donations} table.
 */
function pxlraffle_update_7100() {
  //
  // create the new table
  $schema['pxl_donations'] = array(
    'description' => 'Table that contains all stripe donations with the corresponding fees.',
    'fields' => array(
      'did' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique donation event ID.',
      ),
      'booked' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Indicates, if donations has been completely booked in bank account',
      ),
      'type' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => 'one-time',
        'description' => 'Type of donation event, for example "one-time" or "recurring"',
      ),
      'currency' => array(
        'type' => 'varchar',
        'length' => 10,
        'not null' => FALSE,
        'default' => 'CHF',
        'description' => "Currency of the amount and fees.",
      ),
      'amount' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2
      ),
      'stripe_fee' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'description' => 'Stripe transaction fee',
      ),
      'app_fee' => array(
        'type' => 'numeric',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'precision' => 10,
        'scale' => 2,
        'description' => 'Voluntary application fee for administration',
      ),
      'stripe_cust_id' => array(
        'type' => 'varchar',
        'length' => 100,
        'not null' => FALSE,
        'default' => '',
        'description' => 'Stripe customer id, that holds subscription',
      ),
      'timestamp' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Unix timestamp of when event occurred.',
      ),
    ),
    'primary key' => array('did'),
  );
  db_create_table('pxl_donations', $schema['pxl_donations']);
  
  //
  // update table {donations} with all entries in {watchdog}
  $query = db_select('watchdog', 'w')
    ->fields('w', array('timestamp', 'variables'))
    ->condition('w.type', 'stripe_button')
    ->orderBy('w.timestamp', 'DESC');
  $result = $query->execute();

  foreach ($result as $dblog) {
    $payment = unserialize($dblog->variables);
    $fields = array(
      'booked' => 0,
      'type' => 'one-time',
      'amount' => $payment['@amount'],
      'stripe_fee' => $payment['@stripe_fee'],
      'app_fee' => $payment['@app_fee'],
      'timestamp' => $dblog->timestamp,
    );
    db_insert('pxl_donations')
      ->fields($fields)
      ->execute();
  }
}

/**
 * Add new fields to {pxl_donations} table.
 */
function pxlraffle_update_7110() {
  $currency_spec = array(
    'type' => 'varchar',
    'length' => 10,
    'not null' => FALSE,
    'default' => 'CHF',
    'initial' => 'CHF', // sets all fields of existing rows to value
    'description' => "Currency of the amount and fees.",
  );
  db_add_field('pxl_donations', 'currency', $currency_spec);

  $customer_spec = array(
    'type' => 'varchar',
    'length' => 100,
    'not null' => FALSE,
    'default' => '',
    'description' => 'Stripe customer id, that holds subscription',
  );
  db_add_field('pxl_donations', 'stripe_cust_id', $customer_spec);
}

